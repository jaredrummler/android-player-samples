// For building exoplayer-specific sample apps, which are located under the 'exoplayer-java' directory.
include ':exoplayer-java:360VideoSampleApp'
include ':exoplayer-java:BasicCastGoogleReceiverSampleApp'
include ':exoplayer-java:BasicCastBrightcoveReceiverSampleApp'
include ':exoplayer-java:AdRulesIMASampleApp'
include ':exoplayer-java:AdRulesIMAWidevineModularSampleApp'
include ':exoplayer-java:AppCompatActivitySampleApp'
include ':exoplayer-java:AppCompatFragmentSampleApp'
include ':exoplayer-java:BasicSsaiSampleApp'
include ':exoplayer-java:BasicSampleApp'
include ':exoplayer-java:LiveSampleApp'
include ':exoplayer-java:OfflinePlaybackSampleApp'
include ':exoplayer-java:PictureInPictureSampleApp'
include ':exoplayer-java:TextureViewSampleApp'
include ':exoplayer-java:WidevineModularSampleApp'
include ':exoplayer-java:VideoListSampleApp'
include ':exoplayer-java:BasicIMAVASTSampleApp'
include ':exoplayer-java:ThumbnailScrubberSampleApp'

include ':exoplayer-kotlin:AudioOnlySampleApp'

// For building Brightcove Player Controls specific sample apps, which are located under the 'brightcove-player-controls' directory.
include ':brightcove-player-controls:CustomizedControlsSampleApp'
include ':brightcove-player-controls:StyledControlsSampleApp'
include ':brightcove-player-controls:RewindArrowLeftSampleApp'
include ':brightcove-player-controls:RewindBackwardSampleApp'
include ':brightcove-player-controls:RewindStepBackwardSampleApp'
include ':brightcove-player-controls:SeekBarColorsSampleApp'

// FreeWheel samples require AdManager.aar v6.28.0 to be added to the libs
// folder under your home directory.
// This aar archive must be acquired from FreeWheel by you.
if (freewheelDependenciesAreSatisfied()) {
    include ':exoplayer-java:FreeWheelSampleApp'
    include ':exoplayer-java:FreeWheelWidevineModularSampleApp'
}

if (pulseDependenciesAreSatisfied()) {
    include ':exoplayer-java:PulseSampleApp'
}

boolean freewheelDependenciesAreSatisfied() {
    File dep = file("${System.getProperty("user.home")}/libs/AdManager.aar")
    return dep.exists()
}

boolean pulseDependenciesAreSatisfied() {
    File dep = file("${System.getProperty("user.home")}/libs/Pulse.aar")
    return dep.exists()
}

include ':exoplayer-kotlin:AudioOnlySample:audioonlysample'
